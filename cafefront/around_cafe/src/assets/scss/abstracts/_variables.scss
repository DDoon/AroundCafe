// Color Set
$black: #000000;
$dark: #191a20;
$primary: #3f4150;
$secondary: #8c8d96;
$tertiary: #b2b3b9;
$border: #e0e2e7; // 테두리 컬러
$background: #f7f8fa; // 백그라운드 컬러,
$white: #ffffff;

$indigo: #3f51b5; // 메인 컬러

// red, yellow는 사용해보고 바뀔 수 있음
$red: #ef5350; // 장바구니 갯수에 사용할 컬러
$yellow: #ffeb3b; // 별점에 사용할 컬러

// Font Set, 우리가 사용할 메인 폰트, 우선 대중적인 Noto Sans KR 사용하려고 함
// Vuetify 폰트가 Robo 라서 vuetify폰트로 바꿔야 더 자연스러운가 고민중
// 그래서 폰트가 변경될 수 있다고 생각함
$font-main: "Noto Sans KR", sans-serif;

// 사용할 폰트 사이즈 셋팅, 폰트는 rem으로 사용해야 사용자가 인터넷 옵션에서 사이즈 변경했을 때 바뀜
// px로 사용할 시에는 옵션에서 사이즈를 변경해도 변하지 않기 때문에 비추천이라고 함
$font-size-12: 0.75rem;
$line-height-12: 1rem;
$letter-spacing-12: -0.005em;

$font-size-13: 0.8125rem;
$line-height-13: 1.25rem;
$letter-spacing-13: -0.01em;

$font-size-14: 0.875rem;
$line-height-14: 1.5rem;
$letter-spacing-14: -0.01em;

$font-size-16: 1rem;
$line-height-16: 1.5rem;
$letter-spacing-16: -0.01em;

$font-size-18: 1.125rem;
$line-height-18: 1.75rem;
$letter-spacing-18: -0.02em;

$font-size-24: 1.5rem;
$line-height-24: 2.125rem;
$letter-spacing-24: -0.01em;

// BreakPoint, 모바일, 테블릿, 데스크탑에 따라 변경할 기준점
// 그런데 vuetify에서 정한 기준점으로 할까, 사용했던 기준점으로 할까 고민중
$md-breakpoint: 601px;
$lg-breakpoint: 1265px;
$md-breakpoint-1: 600px;
$lg-breakpoint-1: 1264px;

// Grids 그리드 설정해둔 것, 확인해보니  vuetify랑은 다른게 없는거같음 기준점만 바꾸면 될듯??
$gutter: 20px;

$sm-columns: 4;
$sm-margin: 5px;

$md-columns: 12;
$md-margin: 30px;
$md-max-container: 960px + $md-margin * 2;

$lg-columns: 12;
$lg-unit: 90px;
$lg-max-container: ($lg-unit + $gutter) * $lg-columns;

$grid-margin: 15px;

// gnb, lnb
$lnb-level: 50;
$gnb-level: 60;

//Header gnb,lnb 높이
$gnb-height-sm: 50px;
$gnb-height-md: 80px;

$lnb-height-sm: 40px;
$lnb-height-md: 50px;

$DashboardSidebar-shadow: 0 4px 6px rgba(0, 0, 0, 0.18);

// visually-hidden은 안보이게 하는거임 ex) <div class="visually-hidden">test</div> 이러면 div태그에 속한게 아예 안보임
.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// sm: 모바일, md: 테블릿, lg: 데스크탑
// ex) sm-only: 모바일에서만 보이기, sm-hidden: 모바일에서만 숨기기
// ex) <div class="sm-only">test</div> 이러면 div에 속한 태그들이 모바일 기준점에서만 보임
.sm-only {
  @media screen and (min-width: $md-breakpoint) {
    display: none !important;
  }
}

.md-only {
  @media screen and (max-width: $md-breakpoint-1) {
    display: none !important;
  }

  @media screen and (min-width: $lg-breakpoint) {
    display: none !important;
  }
}

.lg-only {
  @media screen and (max-width: $lg-breakpoint-1) {
    display: none !important;
  }
}

.sm-hidden {
  @media screen and (max-width: $md-breakpoint-1) {
    display: none !important;
  }
}

.md-hidden {
  @media screen and (min-width: $md-breakpoint) and (max-width: $lg-breakpoint-1) {
    display: none !important;
  }
}

.lg-hidden {
  @media screen and (min-width: $lg-breakpoint) {
    display: none !important;
  }
}

// 그리드 시스템, 모바일, 테블릿(T), 데스크탑(D)
.container {
  width: 100%;
  padding: 0 $sm-margin;
  margin: 0 auto;

  .row {
    display: flex;
    flex-wrap: wrap;
  }

  // .col-sm-1 .col-md-2 .col-lg-3
  [class^="col-"] {
    padding: 0 $gutter/2;
  }

  @for $i from 1 through $sm-columns {
    .col-sm-#{$i} {
      width: percentage($i / $sm-columns);
    }
  }

  @include responsive(T) {
    max-width: $md-max-container;
    padding: 0 $md-margin;

    @for $i from 1 through $md-columns {
      .col-md-#{$i} {
        width: percentage($i / $md-columns);
      }
    }
  }

  @include responsive(D) {
    max-width: $lg-max-container;
    padding: 0;

    @for $i from 1 through $lg-columns {
      .col-lg-#{$i} {
        width: ($lg-unit + $gutter) * $i;
      }
    }
  }
}
